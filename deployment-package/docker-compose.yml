version: '3.8'

services:
  cryptonbets-app:
    build: .
    container_name: cryptonbets-production
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - cryptonbets-network

  postgres:
    image: postgres:15-alpine
    container_name: cryptonbets-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: cryptonbets_production
      POSTGRES_USER: cryptonbets_user
      POSTGRES_PASSWORD: ${PGPASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-export.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cryptonbets-network

  redis:
    image: redis:7-alpine
    container_name: cryptonbets-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - cryptonbets-network

  nginx:
    image: nginx:alpine
    container_name: cryptonbets-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - cryptonbets-app
    networks:
      - cryptonbets-network

volumes:
  postgres_data:
  redis_data:

networks:
  cryptonbets-network:
    driver: bridge
